;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name tetris.rules, :imports nil, :requires {tetris.shapes tetris.shapes}, :uses {shapes tetris.shapes}, :defs {initial-state {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 4, :column 7, :end-line 4, :end-column 20, :arglists (quote ([]))}, :name tetris.rules/initial-state, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, clear-row {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([{:keys [board], :as state} row]))}, :name tetris.rules/clear-row, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 16, :method-params ([p__23477 row]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [board], :as state} row]))}, fall {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 42, :column 7, :end-line 42, :end-column 11, :arglists (quote ([state]))}, :name tetris.rules/fall, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 11, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, valid? {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 20, :column 7, :end-line 20, :end-column 13, :arglists (quote ([{:keys [board], :as state}]))}, :name tetris.rules/valid?, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 13, :method-params ([p__23468]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [board], :as state}]))}, rotate-ccw {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 13, :column 7, :end-line 13, :end-column 17, :arglists (quote ([shape]))}, :name tetris.rules/rotate-ccw, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 17, :method-params ([shape]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([shape]))}, shape-coords {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 15, :column 7, :end-line 15, :end-column 19, :arglists (quote ([{:keys [shape-pos shape]}]))}, :name tetris.rules/shape-coords, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 19, :method-params ([p__23447]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [shape-pos shape]}]))}, game-step {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 56, :column 7, :end-line 56, :end-column 16, :arglists (quote ([{:keys [frame board speed], :as state}]))}, :name tetris.rules/game-step, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 16, :method-params ([p__23517]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [frame board speed], :as state}]))}, rotate-cw {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([shape]))}, :name tetris.rules/rotate-cw, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 16, :method-params ([shape]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([shape]))}, x-shift {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 25, :column 7, :end-line 25, :end-column 14, :arglists (quote ([state f]))}, :name tetris.rules/x-shift, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 14, :method-params ([state f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state f]))}, rotate {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 29, :column 7, :end-line 29, :end-column 13, :arglists (quote ([state f]))}, :name tetris.rules/rotate, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 13, :method-params ([state f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state f]))}, fast-drop {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :line 53, :column 7, :end-line 53, :end-column 16, :arglists (quote ([{:keys [board], :as state}]))}, :name tetris.rules/fast-drop, :variadic false, :file "/Users/mbastian/workspace/tetris/src/cljc/tetris/rules.cljc", :end-column 16, :method-params ([p__23512]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [board], :as state}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:frame :speed :shape-pos :shape :board}, :order [:shape-pos :frame :speed :board :shape]}, :doc nil}